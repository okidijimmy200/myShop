Managing Payments and Orders
--In this chapter, you will learn how to integrate a payment gateway into your site
to let users pay by credit card

You will also extend the administration site with
different features.
In this chapter, you will:
• Integrate a payment gateway into your project
• Export orders to CSV files
• Create custom views for the administration site
• Generate PDF invoices dynamically

Lecture 1:
Integrating a payment gateway:;
---A payment gateway allows you to process payments online. Using a payment
gateway, you can manage customers' orders and delegate payment processing
to a reliable, secure third party.

payment gateway we will use is called Braintree, which is used by popular online services such as Uber
and Airbnb
--Braintree provides an API that allows you to process online payments with multiple
payment methods, such as credit card, PayPal, Google Pay, and Apple Pay

--Braintree provides different integration options. The simplest is the Drop-in
integration, which contains a preformatted payment form
--to customize the behavior and experience of your checkout, you are going to use
the advanced Hosted Fields integration

--Certain payment fields on the checkout page, such as the credit card number, CVV
number, or expiration date, must be hosted securely. The Hosted Fields integration
hosts the checkout fields on the payment gateway's domain and renders an iframe
to present the fields to users. This provides you with the ability to customize the look
and feel of the payment form, while ensuring that you are compliant with Payment
Card Industry (PCI) requirements. Since you can customize the look and feel of the
form fields, users won't notice the iframe

Creating a Braintree sandbox account::
--u need Braintree acccount to integrate the payment gateway into your project.

*****https://www.braintreepayments.com/sandbox*****

then log into
*****https://sandbox.braintreegateway.com/login*******

--Your merchant ID and public/private keys will be displayed wch will be needed to authenticate requests to the Braintree API

Installing the Braintree Python module::
--Braintree provides a Python module that simplifies dealing with its API. You are
going to integrate the payment gateway into your project using the braintree
module

*******pip install braintree==3.59.0********

--You use Environment.Sandbox for integrating the
sandbox. Once you go live and create a real account, you will
need to change this to Environment.Production. Braintree
will provide you with a new merchant ID and private/public keys
for the production environment

Lecture 2:
Integrating the payment gateway:
--The checkout process will work as follows:
1. Add items to the shopping cart
2. Check out the shopping cart
3. Enter credit card details and pay

app to manage payments
*****python manage.py startapp payment*******8

--After clients place an order, you need to redirect them to the payment process.
edit thee views.py file of orders

--With this code, after successfully creating an order, you set the order ID in the
current session using the order_id session key.

--you
need to run Celery in order for the order_created task to be queued and executed.

--Every time an order is created in Braintree, a unique transaction identifier is
generated. You will add a new field to the Order model of the orders application
to store the transaction ID. This will allow you to link each order with its related
Braintree transaction

-sync the migrations
*****python manage.py makemigrations*********8

--apply the migrations
*****python manage.py migrate*******

Lecture 4:
Integrating Braintree using Hosted Fields
--The Hosted Fields integration allows you to create your own payment form using
custom styles and layouts. An iframe is added dynamically to the page using the
Braintree JavaScript software development kit (SDK).

--When the customer submits the form, Hosted Fields collects the card details securely and attempts to tokenize them. If tokenization
succeeds, you can send the generated token nonce to your view to make a transaction using the Python braintree module. 
--A token nonce is a secure, onetime-use reference to payment information. It allows you to send sensitive payment
information to Braintree without touching the raw data

the checkout process will b as follows:
1. In the view, a client token is generated using the braintree Python module.
This token is used in the next step to instantiate the Braintree JavaScript
client; it's not the payment token nonce.
2. The view renders the checkout template. The template loads the Braintree
JavaScript SDK using the client token and generates the iframe with the
hosted payment form fields.
3. Users enter their credit card details and submit the form. A payment token
nonce is generated with the Braintree JavaScript client. You send the token
to your view with a POST request.
4. The payment view receives the token nonce and you use it to generate
a transaction using the braintree Python module.


run the rabbitmq-server
*************************rabbitmq-server***************

then
*******************celery -A core worker -l info**************

then run
******************python manage.py runserver***********

--Braintree provides a list of successful and unsuccessful credit cards so that you can
test all possible scenarios

CARD:4111 1111 1111 1111
CV:123
EXPIRATION_DATE=12/28

check your sandbox account under login

checkout http://127.0.0.1:8000/admin/orders/order/ to see the orders
--The order should now be marked as paid and contain the related Braintree
transaction ID

--Note that the payment_process view does not handle transaction declines. Braintree
provides you with the processor response codes that are returned by the credit card
processor. These are especially useful to know why a transaction might have been
declined. You can obtain a response code using result.transaction.processor_
response_code and its associated response text using result.transaction.
processor_response_text.

Going live::
--Once you have tested your environment, you can create a real Braintree account at
https://www.braintreepayments.com. Once you are ready to move into production,
remember to change your live environment credentials in the settings.py
file of your project and use braintree.Environment.Production to set up
your environment.